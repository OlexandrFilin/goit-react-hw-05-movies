{"version":3,"file":"static/js/461.c19190af.chunk.js","mappings":"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","sources":["Api.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieDetails/MovieCard.styled.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n const KEY = \"39d6833137272dd1d732fb13910a9756\";\n const   BASE_URL = \"https://api.themoviedb.org/3\"\n\nconst trending = '/trending/all/day'\n\n\n const queryTrending = async (strSearch, pageNumber) => {\n  const param = new URLSearchParams({\n    api_key: KEY,\n   \n  });\n\n  const queryUrl =`${BASE_URL}${trending}?${param.toString()}`;\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\n const queryCardMovie = async (idCard) => {\n  \n  const queryUrl =`${BASE_URL}/movie/${idCard}?api_key=${KEY}`;  \n \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst querySearch = async (stringSearch) => {\n  const queryUrl =`${BASE_URL}/search/movie?query=${stringSearch}&include_adult=false&language=en-US&page=1'&api_key=${KEY}`;  \n  \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst actorsView = async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/credits?api_key=${KEY}`; \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst reviews= async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/reviews?api_key=${KEY}`; \n // console.log('queryUrl', queryUrl)\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nexport {queryTrending, queryCardMovie, querySearch,actorsView, reviews };","import styled from 'styled-components';\n\nexport const WrapImageGallery = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { CirclesWithBar } from 'react-loader-spinner';\nimport { WrapImageGallery } from './Loader.styled';\n\nconst spinerFunc = () => {\n  return (\n    <WrapImageGallery>\n      <CirclesWithBar\n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        barColor=\"\"\n        ariaLabel=\"circles-with-bar-loading\"\n      />\n    </WrapImageGallery>\n  );\n};\n const spinerGo = spiner => {\n    if (!spiner) {\n      return;\n    }\n    return <div>{spinerFunc()}</div>;\n  };\n\n  export {spinerGo} ;","import styled from \"styled-components\"\nimport { Link } from \"react-router-dom\";\n\nexport const ContainerAboutMovie = styled.div`\ndisplay:flex; \ncolumn-gap: 26px;\n `\n export const GoBackStyl = styled(Link)`\n display: flex;\n            align-items: center; /* Вирівнювання в центрі по вертикалі */\n margin-bottom: 15px;\n margin-left: 15px;\n font-size: 20px;\n width: 100px;\n border: 1px solid black;\n background-color: beige;\n`\n\nexport const ListNavAddInfo = styled.ul`\npadding-left: 102px;\npadding-top: 10px;\nborder: 1px solid black;\npadding-bottom: 10px;\nfont-size:20px;\nfont-weight:700;\nbackground-color: beige;\n`","//import GoBack from 'components/GoBack/GoBack';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { queryCardMovie } from '../../Api';\nimport { useState, useEffect, useRef } from 'react';\nimport {\n  ContainerAboutMovie,\n  GoBackStyl,\n  ListNavAddInfo,\n} from './MovieCard.styled';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { spinerGo } from '../Loader/Loader';\n\nconst MovieCard = () => {\n  const { movieId } = useParams();\n  const [isPosterPass, setPosterPass] = useState('');\n  const [isTitle, setTitle] = useState('');\n  const [isPopularity, setPopularity] = useState(0);\n  const [isReleaseDate, setReleaseDate] = useState('');\n  const [isOverview, setOverview] = useState('');\n  const [isGenres, setGenres] = useState([]);\n  const [isSpiner, setSpiner] = useState(true);\n\n  const location = useLocation();\n\n  const BackLocationRef = useRef(location.state?.from);\n  useEffect(() => {\n    if (!isPosterPass) {\n      setSpiner(true);\n      async function fetchData() {\n        try {\n          await queryCardMovie(movieId).then(data => {\n            setPosterPass(data.poster_path);\n            setTitle(data.title);\n            setReleaseDate(data.release_date);\n            setOverview(data.overview);\n            setPopularity(data.popularity);\n            setGenres([...data.genres]);\n          });\n        } catch (error) {\n          console.log('error', error);\n        } finally {\n          setSpiner(false);\n        }\n      }\n      fetchData();\n    }\n  }, [isPosterPass, isGenres, movieId]);\n\n  const getJar = str => {\n    const date = new Date(str);\n    return date.getUTCFullYear();\n  };\n\n  const getGenres = arr => {\n    return arr.reduce((str, item) => {\n      const nameGenres = item?.name;\n      if (!nameGenres) {\n        return str;\n      }\n      return str + ' ' + nameGenres;\n    }, '');\n  };\n\n  \n\n  const defaultImg =\n    '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>';\n  return (\n    <>\n      <GoBackStyl to={BackLocationRef.current}>\n        <BiArrowBack />\n        Go back\n      </GoBackStyl>\n      {spinerGo(isSpiner)}\n      <ContainerAboutMovie>\n        <img\n          src={\n            isPosterPass\n              ? `https://image.tmdb.org/t/p/w500${isPosterPass}`\n              : defaultImg\n          }\n          alt=\"isCargMovie.title\"\n        />\n        <div>\n          <h2>{`${isTitle}  ${getJar(isReleaseDate)}`}</h2>\n          <p>{`User score: ${Math.ceil(isPopularity)}%`}</p>\n          <h3>Owerview</h3>\n          <p>{isOverview}</p>\n          <h3>Genres</h3>\n          <p>{getGenres(isGenres)}</p>\n        </div>\n      </ContainerAboutMovie>\n\n      <ListNavAddInfo>\n        <li>\n          <Link to={'cast'}> Cast</Link>\n        </li>\n        <li>\n          <Link to={'reviews'}> Reviews</Link>\n        </li>\n      </ListNavAddInfo>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\nexport default MovieCard;\n"],"names":["KEY","BASE_URL","queryTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","strSearch","pageNumber","param","queryUrl","response","_context","prev","next","URLSearchParams","api_key","concat","toString","axios","catch","error","Error","message","sent","status","abrupt","data","stop","_x","_x2","apply","arguments","queryCardMovie","_ref2","_callee2","idCard","_context2","_x3","querySearch","_ref3","_callee3","stringSearch","_context3","_x4","actorsView","_ref4","_callee4","_context4","_x5","reviews","_ref5","_callee5","_context5","_x6","WrapImageGallery","styled","_templateObject","_taggedTemplateLiteral","spinerGo","spiner","_jsx","children","CirclesWithBar","height","width","color","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","ContainerAboutMovie","GoBackStyl","Link","_templateObject2","ListNavAddInfo","_templateObject3","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","isPosterPass","setPosterPass","_useState3","_useState4","isTitle","setTitle","_useState5","_useState6","isPopularity","setPopularity","_useState7","_useState8","isReleaseDate","setReleaseDate","_useState9","_useState10","isOverview","setOverview","_useState11","_useState12","isGenres","setGenres","_useState13","_useState14","isSpiner","setSpiner","location","useLocation","BackLocationRef","useRef","state","from","useEffect","fetchData","then","poster_path","title","release_date","overview","popularity","_toConsumableArray","genres","t0","console","log","finish","arr","str","_jsxs","_Fragment","to","current","BiArrowBack","src","alt","Date","getUTCFullYear","Math","ceil","reduce","item","nameGenres","name","Suspense","Outlet"],"sourceRoot":""}
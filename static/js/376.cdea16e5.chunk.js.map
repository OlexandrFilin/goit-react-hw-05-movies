{"version":3,"file":"static/js/376.cdea16e5.chunk.js","mappings":"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","sources":["Api.js","components/Actors/Actors.styled.js","components/Actors/Actors.jsx"],"sourcesContent":["import axios from 'axios';\n\n const KEY = \"39d6833137272dd1d732fb13910a9756\";\n const   BASE_URL = \"https://api.themoviedb.org/3\"\n\nconst trending = '/trending/all/day'\n\n\n const queryTrending = async (strSearch, pageNumber) => {\n  const param = new URLSearchParams({\n    api_key: KEY,\n   \n  });\n\n  const queryUrl =`${BASE_URL}${trending}?${param.toString()}`;\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\n const queryCardMovie = async (idCard) => {\n  \n  const queryUrl =`${BASE_URL}/movie/${idCard}?api_key=${KEY}`;  \n \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst querySearch = async (stringSearch) => {\n  const queryUrl =`${BASE_URL}/search/movie?query=${stringSearch}&include_adult=false&language=en-US&page=1'&api_key=${KEY}`;  \n  \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst actorsView = async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/credits?api_key=${KEY}`; \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst reviews= async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/reviews?api_key=${KEY}`; \n // console.log('queryUrl', queryUrl)\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nexport {queryTrending, queryCardMovie, querySearch,actorsView, reviews };","import styled from \"styled-components\";\n\nexport const ImgActor = styled.img`\nwidth: 200px\n\n`","import {  useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport {actorsView} from '../../Api';\nimport { ImgActor} from './Actors.styled'\n\nconst Actors =()=>{\n\n    const [isCast, setCast] = useState([]);\n    //Проводимо пошук та рендеримо перелік акторів тільки якщо пустий масив акторів.\n    const params =useParams();\n       useEffect(() => {\n        \n       if (isCast.length === 0) {\n          async function fetchData() {\n            try {\n              await actorsView(params.movieId).then(data => {\n               setCast(data.cast);\n               //console.log('data.cast', data.cast)\n                });\n            } catch (error) {\n              console.log('error', error);\n            } finally {\n            }\n          }\n          fetchData();\n     }\n      }, [params.movieId, isCast.length ]);\n\n      const actors =(arrActors)=>{\n\n        const defaultImg = '<https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700>'\n\n\n       return arrActors.map((actor)=>{\n        const {cast_id,profile_path,character } =actor;\n          return (<li key={cast_id}>  <ImgActor   src={ profile_path ?  `https://image.tmdb.org/t/p/w500${profile_path}` :defaultImg}\n          alt={actor.name}  />\n          <p>{actor.name}</p>\n          <p>{`Character: ${character}`}</p>\n           </li> \n          )\n        })\n        \n      }\n    return (\n        <ul>\n        {\n          actors(isCast)\n        }           \n        </ul>\n    )\n} \n\nexport default Actors;"],"names":["KEY","BASE_URL","queryTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","strSearch","pageNumber","param","queryUrl","response","_context","prev","next","URLSearchParams","api_key","concat","toString","axios","catch","error","Error","message","sent","status","abrupt","data","stop","_x","_x2","apply","arguments","queryCardMovie","_ref2","_callee2","idCard","_context2","_x3","querySearch","_ref3","_callee3","stringSearch","_context3","_x4","actorsView","_ref4","_callee4","_context4","_x5","reviews","_ref5","_callee5","_context5","_x6","ImgActor","styled","_templateObject","_taggedTemplateLiteral","_useState","useState","_useState2","_slicedToArray","isCast","setCast","params","useParams","useEffect","length","fetchData","movieId","then","cast","t0","console","log","finish","arrActors","_jsx","children","map","actor","cast_id","profile_path","character","_jsxs","src","alt","name"],"sourceRoot":""}
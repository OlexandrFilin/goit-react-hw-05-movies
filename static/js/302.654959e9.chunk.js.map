{"version":3,"file":"static/js/302.654959e9.chunk.js","mappings":"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","sources":["Api.js","components/ListMovies/ListMovies.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/MovieSearch/MovieSearch.styled.js","components/MovieSearch/MovieSearch.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\n const KEY = \"39d6833137272dd1d732fb13910a9756\";\n const   BASE_URL = \"https://api.themoviedb.org/3\"\n\nconst trending = '/trending/all/day'\n\n\n const queryTrending = async (strSearch, pageNumber) => {\n  const param = new URLSearchParams({\n    api_key: KEY,\n   \n  });\n\n  const queryUrl =`${BASE_URL}${trending}?${param.toString()}`;\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\n const queryCardMovie = async (idCard) => {\n  \n  const queryUrl =`${BASE_URL}/movie/${idCard}?api_key=${KEY}`;  \n \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst querySearch = async (stringSearch) => {\n  const queryUrl =`${BASE_URL}/search/movie?query=${stringSearch}&include_adult=false&language=en-US&page=1'&api_key=${KEY}`;  \n  \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst actorsView = async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/credits?api_key=${KEY}`; \n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nconst reviews= async (idCard) => {\n  const queryUrl =`${BASE_URL}/movie/${idCard}/reviews?api_key=${KEY}`; \n // console.log('queryUrl', queryUrl)\n  const response = await axios\n    .get(queryUrl)\n    .catch(error => {\n      throw new Error(error.message);\n    });\n  if (!response) {\n    throw new Error(response.status);\n  }\n  return response.data;\n};\n\nexport {queryTrending, queryCardMovie, querySearch,actorsView, reviews };","import { Link, useLocation} from \"react-router-dom\";\n\n const ListMovies = ({ArrMovies})=>{  \n\nconst locationList =useLocation();\n    return (\n        <>\n       {(ArrMovies.length !==0) && <ul>\n            {ArrMovies.map(item =>\n            {\n                if(item.title){\n                    return <li key={item.id}> \n                    <Link to={`/movies/${item.id}`} state={{ from: locationList}} >{item.title}</Link>\n                     </li> \n                } else {\n                    return <li key={item.id}> \n                    <Link to={`/movies/${item.id}`} state={{ from: locationList}} >{item.name}</Link> \n                    </li> \n                 }\n            }                \n            )}\n        </ul> }\n        </>\n    )\n};\nexport default ListMovies;","import styled from 'styled-components';\n\nexport const WrapImageGallery = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n","import { CirclesWithBar } from 'react-loader-spinner';\nimport { WrapImageGallery } from './Loader.styled';\n\nconst spinerFunc = () => {\n  return (\n    <WrapImageGallery>\n      <CirclesWithBar\n        height=\"100\"\n        width=\"100\"\n        color=\"#4fa94d\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        outerCircleColor=\"\"\n        innerCircleColor=\"\"\n        barColor=\"\"\n        ariaLabel=\"circles-with-bar-loading\"\n      />\n    </WrapImageGallery>\n  );\n};\n const spinerGo = spiner => {\n    if (!spiner) {\n      return;\n    }\n    return <div>{spinerFunc()}</div>;\n  };\n\n  export {spinerGo} ;","import styled from \"styled-components\";\n\n// export const LabelSearch = styled.label`\n// display: block;\n// padding-top: 20px;\n// `\n\nexport const InputSearch = styled.input`\nmargin-left: 10px;\n`;\n\nexport const FormSearch = styled.form`\ndisplay: flex;\n\n`;\nexport const ButtonSearch = styled.button`\nhight :avto;\nwidth : 120px;\nmargin-left: 10px;\n`;","import { useState, useEffect } from 'react';\nimport { InputSearch, FormSearch, ButtonSearch } from './MovieSearch.styled';\nimport { querySearch } from '../../Api';\nimport ListMovies from 'components/ListMovies/ListMovies';\nimport { useSearchParams } from 'react-router-dom';\nimport { spinerGo } from '../Loader/Loader';\nconst MovieSearch = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  //получаем с searchParams параметра query(строка поиска) а елси undefound - пустая строка\n  const query = searchParams.get('query') ?? '';\nconst [isQuery, setQuery] = useState(query);\n  const [isList, setIsList] = useState([]);\n  const [isSpiner, setSpiner] = useState(false);\n  //для пробрасывания текущего состояния location во вложенные компоненты\n  //let srtingSearch='';\n  useEffect(() => {\n    // Тут виконуємо асинхронну операцію,\n    // наприклад HTTP-запит за інформацією про фiльм\n    if (!isQuery) return;\n\n    try {\n      setSpiner(true);\n      async function fetchMovie() {\n        await querySearch(isQuery).then(data => {\n          setIsList(data.results);\n        });\n      }\n      fetchMovie();\n    } catch (error) {\n      console.log('error', error);\n    } finally {\n      setSpiner(false);\n    }\n  }, [isQuery]);\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const strQuery = e.target.InpStrSearch.value;\n    if (strQuery) {\n     // setSearchParams({ query: strQuery });\n     setQuery(strQuery);\n    }\n  };\n  // для контрольованого вводу параметра використовуємо хук useSearchParams а не  state компонента\n  const handleChangeParam = e => {\n    e.target.value\n      ? setSearchParams({ query: e.target.value })\n      : setSearchParams({});\n\n  //   console.log('e.target.value', e.target.value)\n  // srtingSearch=   e.target.value;\n      \n  };\n\n  return (\n    <>\n      <FormSearch onSubmit={onSubmit}>\n        <InputSearch\n          type=\"text\"\n          name=\"InpStrSearch\"\n          placeholder=\"String of search\"\n          value={query}\n          onChange={handleChangeParam}\n        />\n        <ButtonSearch type=\"submit\">Search</ButtonSearch>\n      </FormSearch>\n      {spinerGo(isSpiner)}\n      {isList && <ListMovies ArrMovies={isList} />}\n    </>\n  );\n};\nexport default MovieSearch;\n","//import GoBack from \"components/GoBack/GoBack\";\n\nimport MovieSearch from \"components/MovieSearch/MovieSearch\"\n\nconst Movies =()=>{\n    return (\n        <>\n        {/* <GoBack/> */}\n        <MovieSearch></MovieSearch>\n</>\n    \n    )\n}\nexport default Movies;"],"names":["KEY","BASE_URL","queryTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","strSearch","pageNumber","param","queryUrl","response","_context","prev","next","URLSearchParams","api_key","concat","toString","axios","catch","error","Error","message","sent","status","abrupt","data","stop","_x","_x2","apply","arguments","queryCardMovie","_ref2","_callee2","idCard","_context2","_x3","querySearch","_ref3","_callee3","stringSearch","_context3","_x4","actorsView","_ref4","_callee4","_context4","_x5","reviews","_ref5","_callee5","_context5","_x6","ArrMovies","locationList","useLocation","_jsx","_Fragment","children","length","map","item","title","Link","to","id","state","from","name","WrapImageGallery","styled","_templateObject","_taggedTemplateLiteral","spinerGo","spiner","CirclesWithBar","height","width","color","wrapperStyle","wrapperClass","visible","outerCircleColor","innerCircleColor","barColor","ariaLabel","InputSearch","FormSearch","_templateObject2","ButtonSearch","_templateObject3","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","isQuery","setQuery","_useState3","_useState4","isList","setIsList","_useState5","_useState6","isSpiner","setSpiner","useEffect","fetchMovie","then","results","console","log","_jsxs","onSubmit","e","preventDefault","strQuery","target","InpStrSearch","value","type","placeholder","onChange","ListMovies","MovieSearch"],"sourceRoot":""}